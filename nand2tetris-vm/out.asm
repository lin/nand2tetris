// Initiation 
@256
D=A
@SP
M=D
@RETURN.LABEL.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
A=M
M=D
@SP
D=M
@LCL
M=D
@System.init
0;JMP
(RETURN.LABEL.0)
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.28
D;JEQ
@65535
D=A
@JUMP.LABEL.29
0;JMP
(JUMP.LABEL.28)
@0
D=A
(JUMP.LABEL.29)
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.36
D;JEQ
@65535
D=A
@JUMP.LABEL.37
0;JMP
(JUMP.LABEL.36)
@0
D=A
(JUMP.LABEL.37)
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.44
D;JEQ
@65535
D=A
@JUMP.LABEL.45
0;JMP
(JUMP.LABEL.44)
@0
D=A
(JUMP.LABEL.45)
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.52
D;JLT
@65535
D=A
@JUMP.LABEL.53
0;JMP
(JUMP.LABEL.52)
@0
D=A
(JUMP.LABEL.53)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.60
D;JLT
@65535
D=A
@JUMP.LABEL.61
0;JMP
(JUMP.LABEL.60)
@0
D=A
(JUMP.LABEL.61)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.68
D;JLT
@65535
D=A
@JUMP.LABEL.69
0;JMP
(JUMP.LABEL.68)
@0
D=A
(JUMP.LABEL.69)
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.76
D;JGT
@65535
D=A
@JUMP.LABEL.77
0;JMP
(JUMP.LABEL.76)
@0
D=A
(JUMP.LABEL.77)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.84
D;JGT
@65535
D=A
@JUMP.LABEL.85
0;JMP
(JUMP.LABEL.84)
@0
D=A
(JUMP.LABEL.85)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M
A=A-1
D=M
A=A-1
D=M-D
@JUMP.LABEL.92
D;JGT
@65535
D=A
@JUMP.LABEL.93
0;JMP
(JUMP.LABEL.92)
@0
D=A
(JUMP.LABEL.93)
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// neg
@SP
A=M
A=A-1
M=-M
@SP
M=M-1
// and
@SP
A=M
A=A-1
D=M
A=A-1
M=D&M
@SP
M=M-1
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
A=M
A=A-1
D=M
A=A-1
M=D|M
@SP
M=M-1
// not
@SP
A=M
A=A-1
M=!M
@SP
M=M-1
